cluster:
  name: {{ cluster_name }}
{% if is_bootstrapping is defined %}
  initial_master_nodes:
{% for master_nodes in master_node_list %}
  - {{ master_nodes }}
{% endfor %}
{% endif %}

node:
  name: {{ node_address | default(inventory_hostname) }}
  master: {{ "true" if ansible_master_group in group_names else "false" }}
  data: {{ "true" if ansible_data_group in group_names else "false" }}

path:
  data: {{ path_data }}
  logs: {{ path_logs }}

bootstrap:
  memory_lock: {{ bootstrap_memory_lock | string | lower }}

network:
  host: {{ ansible_all_ipv4_addresses | ipaddr('private') | first }}

http:
  port: {{ http_port | default(9200) }}

discovery:
  seed_hosts:
{% for master_nodes in master_node_list %}
  - {{ master_nodes }}
{% endfor %}

plugins.security.ssl.transport.pemcert_filepath: {{ ssl_path }}/{{ inventory_hostname }}.pem
plugins.security.ssl.transport.pemkey_filepath: {{ ssl_path }}/{{ inventory_hostname }}-key.pem
plugins.security.ssl.transport.pemtrustedcas_filepath: {{ ssl_path }}/{{ ssl_root_ca_cert_name }}
plugins.security.ssl.transport.enforce_hostname_verification: {{ security_ssl_transport_enforce_hostname_verification }}
plugins.security.ssl.http.enabled: {{ security_ssl_http_enabled }}
plugins.security.ssl.http.pemcert_filepath: {{ ssl_path }}/{{ inventory_hostname }}.pem
plugins.security.ssl.http.pemkey_filepath: {{ ssl_path }}/{{ inventory_hostname }}-key.pem
plugins.security.ssl.http.pemtrustedcas_filepath: {{ ssl_path }}/{{ ssl_root_ca_cert_name }}
plugins.security.ssl.http.clientauth_mode: {{ security_ssl_http_clientauth_mode }}
plugins.security.allow_unsafe_democertificates: {{ security_allow_unsafe_democertificates }}
plugins.security.allow_default_init_securityindex: {{ security_allow_default_init_securityindex }}
plugins.security.authcz.admin_dn:
  - '{{ hostvars[groups[ansible_master_group][0]].final_admin_ssl_subject.stdout | replace('subject=', '') }}'
plugins.security.nodes_dn:
{% if ssl_nodes_individual_certs %}
{% for master_node_dn in groups[ansible_master_group] | map('extract', hostvars, 'final_node_ssl_subject') %}
  - '{{ master_node_dn.stdout | replace('subject=', '') }}'
{% endfor %}
{% endif %}
{% if ssl_nodes_individual_certs %}
{% for data_node_dn in groups[ansible_data_group] | map('extract', hostvars, 'final_node_ssl_subject') %}
  - '{{ data_node_dn.stdout | replace('subject=', '') }}'
{% endfor %}
{% endif %}
plugins.security.audit.type: {{ security_audit_type }}
plugins.security.enable_snapshot_restore_privilege: {{ security_enable_snapshot_restore_privilege }}
plugins.security.check_snapshot_restore_write_privileges: {{ security_check_snapshot_restore_write_privileges }}
plugins.security.restapi.roles_enabled:
{% for roles_enabled in security_restapi_roles_enabled %}
  - {{ roles_enabled }}
{% endfor %}
plugins.security.system_indices.enabled: {{ security_system_indices_enabled }}
plugins.security.system_indices.indices: 
{% for indices in security_system_indices_indices %}
  - {{ indices }}
{% endfor %}